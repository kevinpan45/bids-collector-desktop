name: Build Windows Desktop App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'

    - name: Install dependencies
      run: npm install

    - name: Debug environment
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"  
        echo "Available npm scripts:"
        npm run
        echo "Tauri CLI version:"
        npx tauri --version
        echo "Current directory:"
        Get-Location
        echo "Directory contents:"
        Get-ChildItem
        echo "Checking package.json scripts:"
        Get-Content package.json | Select-String -Pattern "scripts" -Context 10
        echo "Checking for node_modules:"
        if (Test-Path "node_modules") {
          echo "node_modules directory exists"
          echo "Key dependencies:"
          if (Test-Path "node_modules/@sveltejs") { echo "✓ SvelteKit found" } else { echo "✗ SvelteKit missing" }
          if (Test-Path "node_modules/@tauri-apps") { echo "✓ Tauri packages found" } else { echo "✗ Tauri packages missing" }
          if (Test-Path "node_modules/vite") { echo "✓ Vite found" } else { echo "✗ Vite missing" }
        } else {
          echo "node_modules directory missing!"
        }

    - name: Test npm commands
      run: |
        echo "Testing basic npm functionality..."
        echo "npm list --depth=0:"
        npm list --depth=0 2>&1 || echo "npm list failed, continuing..."
        echo "npm config list:"
        npm config list
        echo "Testing build command availability:"
        npm run build --help 2>&1 || echo "build help failed, continuing..."
        echo "Testing vite directly:"
        npx vite --version

    - name: Build frontend
      run: |
        echo "Starting frontend build..."
        echo "Current directory: $(Get-Location)"
        echo "Setting build environment..."
        $env:CI = "true"
        $env:NODE_ENV = "production"
        echo "Checking build script..."
        npm run build --verbose
        if ($LASTEXITCODE -eq 0) {
          echo "Frontend build completed successfully"
          echo "Checking build output..."
          if (Test-Path "build") {
            echo "Build directory created successfully"
            Get-ChildItem "build" | Select-Object Name, Length | Format-Table
          } else {
            echo "ERROR: Build directory was not created!"
            exit 1
          }
        } else {
          echo "Frontend build failed with exit code: $LASTEXITCODE"
          echo "Attempting to show npm error log..."
          if (Test-Path "$env:USERPROFILE\.npm\_logs") {
            echo "NPM error logs:"
            Get-ChildItem "$env:USERPROFILE\.npm\_logs" -Filter "*.log" | ForEach-Object { 
              echo "=== $($_.Name) ==="
              Get-Content $_.FullName | Select-Object -Last 50
            }
          }
          exit $LASTEXITCODE
        }

    - name: Build Tauri app
      run: |
        echo "Starting Tauri build..."
        echo "Build environment:"
        echo "TAURI_SIGNING_PRIVATE_KEY is set: $($env:TAURI_SIGNING_PRIVATE_KEY -ne $null)"
        echo "Running command: npm run tauri:build:win"
        npm run tauri:build:win
      env:
        TAURI_SIGNING_PRIVATE_KEY: ""
        TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: windows-build
        path: |
          src-tauri/target/x86_64-pc-windows-msvc/release/bundle/
          src-tauri/target/x86_64-pc-windows-msvc/release/*.exe
        retention-days: 30
        if-no-files-found: warn
